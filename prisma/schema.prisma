// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @default(uuid())
  name     String
  email    String   @unique
  password String
  otp                   String?      // ← utilisé pour vérifier un code reçu par email
  otpExpires            DateTime?    // ← date d'expiration du code OTP
  accountLockedUntil      DateTime?
  refreshToken String?
  lastPasswordResetAt   DateTime? 
  role     Role     @default(VENDEUR)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
  failedLoginAttempts  Int      @default(0)
}
enum Role {
  ADMIN
  VENDEUR
  COMPTABLE
}



model Product {
  id           String       @id @default(uuid())
  name         String
  type         String
  purchasePrice Float
  salePrice    Float
  stock        Int          @default(0)
  alertLevel   Int          @default(10)
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  stockEntries StockEntry[]
  sales        Sale[]
}

model StockEntry {
  id         String   @id @default(uuid())
  quantity   Int
  totalCost  Float
  supplier   String
  createdAt  DateTime @default(now())
  product    Product  @relation(fields: [productId], references: [id])
  productId  String
}

model Sale {
  id         String   @id @default(uuid())
  quantity   Int
  totalPrice Float
  client     String
  paymentStatus PaymentStatus
  createdAt  DateTime @default(now())
  product    Product  @relation(fields: [productId], references: [id])
  productId  String
}

enum PaymentStatus {
  PAID
  PARTIAL
  UNPAID
}

